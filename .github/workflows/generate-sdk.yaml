name: Generate SDK

on:
  workflow_dispatch: # Allows manual triggering
  repository_dispatch:
    types: [generate-sdk]

jobs:
  generate_sdk:
    runs-on: ubuntu-latest
    env:
      language: python
      openapi_file: kandji_openapi.yaml

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.KANDJI_POSTMAN_TO_OPENAPI_TOKEN }}

      - name: Download Kandji OpenAPI file
        env:
          GH_TOKEN: ${{ secrets.KANDJI_POSTMAN_TO_OPENAPI_TOKEN }}
        run: |
          gh release download \
            --repo "MScottBlake/kandji-postman-to-openapi" \
            --pattern "kandji_openapi\.yaml" \
            --output "${{ env.openapi_file }}"

      - name: Generate Client
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          # config-file: generator-config.yml
          command-args:
            git-host=github.com
            git-repo-id=kandji-${{ env.language }}-sdk
            git-user-id=MScottBlake
          generator: ${{ env.language }}
          generator-tag: latest-release
          openapi-file: ${{ env.openapi_file }}

      - name: Delete Kandji OpenAPI file
        run: |
          rm -rf "${{ env.openapi_file }}"

      - name: Commit and Push to GitHub
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Automated SDK Update"
          git push

      - name: Create GitHub Release
        if: success()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          tag="sdk-update-$(date +'%Y%m%d%H%M%S')"
          gh release create "${tag}" \
            --title "Automated SDK Update $(date +'%Y-%m-%d %H:%M:%S')" \
            --generate-notes \
            --latest
