# coding: utf-8

"""
    Kandji API

    <html><head></head><body><h1 id=&quot;welcome-to-the-kandji-api-documentation&quot;>Welcome to the Kandji API Documentation</h1> <p>You can find your API URL in Settings &gt; Access. The API URL will follow the below formats.</p> <ul> <li><p>US - <code>https://SubDomain.api.kandji.io</code></p> </li> <li><p>EU - <code>https://SubDomain.api.eu.kandji.io</code></p> </li> </ul> <p>For information on how to obtain an API token, please refer to the following support article.</p> <p><a href=&quot;https://support.kandji.io/api&quot;>https://support.kandji.io/api</a></p> <h4 id=&quot;rate-limit&quot;>Rate Limit</h4> <p>The Kandji API currently has an API rate limit of 10,000 requests per hour per customer.</p> <h4 id=&quot;request-methods&quot;>Request Methods</h4> <p>HTTP request methods supported by the Kandji API.</p> <div class=&quot;click-to-expand-wrapper is-table-wrapper&quot;><table> <thead> <tr> <th>Method</th> <th>Definition</th> </tr> </thead> <tbody> <tr> <td>GET</td> <td>The <code>GET</code> method requests a representation of the specified resource.</td> </tr> <tr> <td>POST</td> <td>The <code>POST</code> method submits an entity to the specified resource.</td> </tr> <tr> <td>PATCH</td> <td>The <code>PATCH</code> method applies partial modifications to a resource.</td> </tr> <tr> <td>DELETE</td> <td>The <code>DELETE</code> method deletes the specified resource.</td> </tr> </tbody> </table> </div><h4 id=&quot;response-codes&quot;>Response codes</h4> <p>Not all response codes apply to every endpoint.</p> <div class=&quot;click-to-expand-wrapper is-table-wrapper&quot;><table> <thead> <tr> <th>Code</th> <th>Response</th> </tr> </thead> <tbody> <tr> <td>200</td> <td>OK</td> </tr> <tr> <td>201</td> <td>Created</td> </tr> <tr> <td>204</td> <td>No content</td> </tr> <tr> <td></td> <td>Typical response when sending the DELETE method.</td> </tr> <tr> <td>400</td> <td>Bad Request</td> </tr> <tr> <td></td> <td>&quot;Command already running&quot; - The command may already be running in a <em>Pending</em> state waiting on the device.</td> </tr> <tr> <td></td> <td>&quot;Command is not allowed for current device&quot; - The command may not be compatible with the target device.</td> </tr> <tr> <td></td> <td>&quot;JSON parse error - Expecting ',' delimiter: line 3 column 2 (char 65)&quot;</td> </tr> <tr> <td>401</td> <td>Unauthorized</td> </tr> <tr> <td></td> <td>This error can occur if the token is incorrect, was revoked, or the token has expired.</td> </tr> <tr> <td>403</td> <td>Forbidden</td> </tr> <tr> <td></td> <td>The request was understood but cannot be authorized.</td> </tr> <tr> <td>404</td> <td>Not found</td> </tr> <tr> <td></td> <td>Unable to locate the resource in the Kandji tenant.</td> </tr> <tr> <td>415</td> <td>Unsupported Media Type</td> </tr> <tr> <td></td> <td>The request contains a media type which the server or resource does not support.</td> </tr> <tr> <td>500</td> <td>Internal server error</td> </tr> <tr> <td>503</td> <td>Service unavailable</td> </tr> <tr> <td></td> <td>This error can occur if a file upload is still being processed via the custom apps API.</td> </tr> </tbody> </table> </div><h4 id=&quot;data-structure&quot;>Data structure</h4> <p>The API returns all structured responses in JSON schema format.</p> <h4 id=&quot;examples&quot;>Examples</h4> <p>Code examples using the API can be found in the Kandji support <a href=&quot;https://github.com/kandji-inc/support/tree/main/api-tools&quot;>GitHub</a>.</p> </body></html>

    The version of the OpenAPI document: 1.0.0
    Contact: mitchelsblake@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing import Optional
from typing_extensions import Annotated
from kandji.models.audit_log_list_audit_events200_response import AuditLogListAuditEvents200Response

from kandji.api_client import ApiClient, RequestSerialized
from kandji.api_response import ApiResponse
from kandji.rest import RESTResponseType


class AuditLogApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def list_audit_events(
        self,
        limit: Annotated[StrictStr, Field(description="A max upper <code>limit</code> is set at 500 records returned per request. Pagination should be used using the cursor in the <code>next</code> key to request more results. Additionally, parameter queries can be added to a request to filter the results.")],
        sort_by: Annotated[StrictStr, Field(description="Sort results by <code>occurred_at</code>, <code>id</code> either ascending (default behavior) or descending(-) order.")],
        start_date: Annotated[Optional[StrictStr], Field(description="Filter by start date in datetime or year-month-day (2024-11-26) formats")] = None,
        end_date: Annotated[Optional[StrictStr], Field(description="Filter by start date in datetime or year-month-day (2024-12-06) formats")] = None,
        cursor: Annotated[Optional[StrictStr], Field(description="You can pass the next cursor as a parameter or use the URL in the next key to get the next page of results or to start from where you left off last.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AuditLogListAuditEvents200Response:
        """List audit events

        <p>List Audit log events from the Kandji Activity module.</p> <p>Returns events related to</p> <ul> <li><p>Blueprint and Library Item creation, updates, and deletions (CUD)</p> </li> <li><p>Access to sensitive data (such as FileVault keys and recovery keys)</p> </li> <li><p>Device lifecycle events (enrollment, deletion, MDM removal, blueprint changes)</p> </li> <li><p>User directory events (including directory user deletions)</p> </li> <li><p>Administrative actions (tenant owner updates, API token management (CUD))</p> </li> <li><p>Admin user management activities</p> </li> <li><p>Vulnerability management detections and remediations (for customers with this feature)</p> </li> </ul>

        :param limit: A max upper <code>limit</code> is set at 500 records returned per request. Pagination should be used using the cursor in the <code>next</code> key to request more results. Additionally, parameter queries can be added to a request to filter the results. (required)
        :type limit: str
        :param sort_by: Sort results by <code>occurred_at</code>, <code>id</code> either ascending (default behavior) or descending(-) order. (required)
        :type sort_by: str
        :param start_date: Filter by start date in datetime or year-month-day (2024-11-26) formats
        :type start_date: str
        :param end_date: Filter by start date in datetime or year-month-day (2024-12-06) formats
        :type end_date: str
        :param cursor: You can pass the next cursor as a parameter or use the URL in the next key to get the next page of results or to start from where you left off last.
        :type cursor: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_audit_events_serialize(
            limit=limit,
            sort_by=sort_by,
            start_date=start_date,
            end_date=end_date,
            cursor=cursor,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AuditLogListAuditEvents200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def list_audit_events_with_http_info(
        self,
        limit: Annotated[StrictStr, Field(description="A max upper <code>limit</code> is set at 500 records returned per request. Pagination should be used using the cursor in the <code>next</code> key to request more results. Additionally, parameter queries can be added to a request to filter the results.")],
        sort_by: Annotated[StrictStr, Field(description="Sort results by <code>occurred_at</code>, <code>id</code> either ascending (default behavior) or descending(-) order.")],
        start_date: Annotated[Optional[StrictStr], Field(description="Filter by start date in datetime or year-month-day (2024-11-26) formats")] = None,
        end_date: Annotated[Optional[StrictStr], Field(description="Filter by start date in datetime or year-month-day (2024-12-06) formats")] = None,
        cursor: Annotated[Optional[StrictStr], Field(description="You can pass the next cursor as a parameter or use the URL in the next key to get the next page of results or to start from where you left off last.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AuditLogListAuditEvents200Response]:
        """List audit events

        <p>List Audit log events from the Kandji Activity module.</p> <p>Returns events related to</p> <ul> <li><p>Blueprint and Library Item creation, updates, and deletions (CUD)</p> </li> <li><p>Access to sensitive data (such as FileVault keys and recovery keys)</p> </li> <li><p>Device lifecycle events (enrollment, deletion, MDM removal, blueprint changes)</p> </li> <li><p>User directory events (including directory user deletions)</p> </li> <li><p>Administrative actions (tenant owner updates, API token management (CUD))</p> </li> <li><p>Admin user management activities</p> </li> <li><p>Vulnerability management detections and remediations (for customers with this feature)</p> </li> </ul>

        :param limit: A max upper <code>limit</code> is set at 500 records returned per request. Pagination should be used using the cursor in the <code>next</code> key to request more results. Additionally, parameter queries can be added to a request to filter the results. (required)
        :type limit: str
        :param sort_by: Sort results by <code>occurred_at</code>, <code>id</code> either ascending (default behavior) or descending(-) order. (required)
        :type sort_by: str
        :param start_date: Filter by start date in datetime or year-month-day (2024-11-26) formats
        :type start_date: str
        :param end_date: Filter by start date in datetime or year-month-day (2024-12-06) formats
        :type end_date: str
        :param cursor: You can pass the next cursor as a parameter or use the URL in the next key to get the next page of results or to start from where you left off last.
        :type cursor: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_audit_events_serialize(
            limit=limit,
            sort_by=sort_by,
            start_date=start_date,
            end_date=end_date,
            cursor=cursor,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AuditLogListAuditEvents200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def list_audit_events_without_preload_content(
        self,
        limit: Annotated[StrictStr, Field(description="A max upper <code>limit</code> is set at 500 records returned per request. Pagination should be used using the cursor in the <code>next</code> key to request more results. Additionally, parameter queries can be added to a request to filter the results.")],
        sort_by: Annotated[StrictStr, Field(description="Sort results by <code>occurred_at</code>, <code>id</code> either ascending (default behavior) or descending(-) order.")],
        start_date: Annotated[Optional[StrictStr], Field(description="Filter by start date in datetime or year-month-day (2024-11-26) formats")] = None,
        end_date: Annotated[Optional[StrictStr], Field(description="Filter by start date in datetime or year-month-day (2024-12-06) formats")] = None,
        cursor: Annotated[Optional[StrictStr], Field(description="You can pass the next cursor as a parameter or use the URL in the next key to get the next page of results or to start from where you left off last.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """List audit events

        <p>List Audit log events from the Kandji Activity module.</p> <p>Returns events related to</p> <ul> <li><p>Blueprint and Library Item creation, updates, and deletions (CUD)</p> </li> <li><p>Access to sensitive data (such as FileVault keys and recovery keys)</p> </li> <li><p>Device lifecycle events (enrollment, deletion, MDM removal, blueprint changes)</p> </li> <li><p>User directory events (including directory user deletions)</p> </li> <li><p>Administrative actions (tenant owner updates, API token management (CUD))</p> </li> <li><p>Admin user management activities</p> </li> <li><p>Vulnerability management detections and remediations (for customers with this feature)</p> </li> </ul>

        :param limit: A max upper <code>limit</code> is set at 500 records returned per request. Pagination should be used using the cursor in the <code>next</code> key to request more results. Additionally, parameter queries can be added to a request to filter the results. (required)
        :type limit: str
        :param sort_by: Sort results by <code>occurred_at</code>, <code>id</code> either ascending (default behavior) or descending(-) order. (required)
        :type sort_by: str
        :param start_date: Filter by start date in datetime or year-month-day (2024-11-26) formats
        :type start_date: str
        :param end_date: Filter by start date in datetime or year-month-day (2024-12-06) formats
        :type end_date: str
        :param cursor: You can pass the next cursor as a parameter or use the URL in the next key to get the next page of results or to start from where you left off last.
        :type cursor: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_audit_events_serialize(
            limit=limit,
            sort_by=sort_by,
            start_date=start_date,
            end_date=end_date,
            cursor=cursor,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AuditLogListAuditEvents200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _list_audit_events_serialize(
        self,
        limit,
        sort_by,
        start_date,
        end_date,
        cursor,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if sort_by is not None:
            
            _query_params.append(('sort_by', sort_by))
            
        if start_date is not None:
            
            _query_params.append(('start_date', start_date))
            
        if end_date is not None:
            
            _query_params.append(('end_date', end_date))
            
        if cursor is not None:
            
            _query_params.append(('cursor', cursor))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v1/audit/events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


