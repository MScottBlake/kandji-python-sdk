# coding: utf-8

"""
    Kandji API

    <html><head></head><body><h1 id=\"welcome-to-the-kandji-api-documentation\">Welcome to the Kandji API Documentation</h1> <p>You can find your API URL in Settings &gt; Access. The API URL will follow the below formats.</p> <ul> <li><p>US - <code>https://SubDomain.api.kandji.io</code></p> </li> <li><p>EU - <code>https://SubDomain.api.eu.kandji.io</code></p> </li> </ul> <p>For information on how to obtain an API token, please refer to the following support article.</p> <p><a href=\"https://support.kandji.io/api\">https://support.kandji.io/api</a></p> <h4 id=\"rate-limit\">Rate Limit</h4> <p>The Kandji API currently has an API rate limit of 10,000 requests per hour per customer.</p> <h4 id=\"request-methods\">Request Methods</h4> <p>HTTP request methods supported by the Kandji API.</p> <div class=\"click-to-expand-wrapper is-table-wrapper\"><table> <thead> <tr> <th>Method</th> <th>Definition</th> </tr> </thead> <tbody> <tr> <td>GET</td> <td>The <code>GET</code> method requests a representation of the specified resource.</td> </tr> <tr> <td>POST</td> <td>The <code>POST</code> method submits an entity to the specified resource.</td> </tr> <tr> <td>PATCH</td> <td>The <code>PATCH</code> method applies partial modifications to a resource.</td> </tr> <tr> <td>DELETE</td> <td>The <code>DELETE</code> method deletes the specified resource.</td> </tr> </tbody> </table> </div><h4 id=\"response-codes\">Response codes</h4> <p>Not all response codes apply to every endpoint.</p> <div class=\"click-to-expand-wrapper is-table-wrapper\"><table> <thead> <tr> <th>Code</th> <th>Response</th> </tr> </thead> <tbody> <tr> <td>200</td> <td>OK</td> </tr> <tr> <td>201</td> <td>Created</td> </tr> <tr> <td>204</td> <td>No content</td> </tr> <tr> <td></td> <td>Typical response when sending the DELETE method.</td> </tr> <tr> <td>400</td> <td>Bad Request</td> </tr> <tr> <td></td> <td>\"Command already running\" - The command may already be running in a <em>Pending</em> state waiting on the device.</td> </tr> <tr> <td></td> <td>\"Command is not allowed for current device\" - The command may not be compatible with the target device.</td> </tr> <tr> <td></td> <td>\"JSON parse error - Expecting ',' delimiter: line 3 column 2 (char 65)\"</td> </tr> <tr> <td>401</td> <td>Unauthorized</td> </tr> <tr> <td></td> <td>This error can occur if the token is incorrect, was revoked, or the token has expired.</td> </tr> <tr> <td>403</td> <td>Forbidden</td> </tr> <tr> <td></td> <td>The request was understood but cannot be authorized.</td> </tr> <tr> <td>404</td> <td>Not found</td> </tr> <tr> <td></td> <td>Unable to locate the resource in the Kandji tenant.</td> </tr> <tr> <td>415</td> <td>Unsupported Media Type</td> </tr> <tr> <td></td> <td>The request contains a media type which the server or resource does not support.</td> </tr> <tr> <td>500</td> <td>Internal server error</td> </tr> <tr> <td>503</td> <td>Service unavailable</td> </tr> <tr> <td></td> <td>This error can occur if a file upload is still being processed via the custom apps API.</td> </tr> </tbody> </table> </div><h4 id=\"data-structure\">Data structure</h4> <p>The API returns all structured responses in JSON schema format.</p> <h4 id=\"examples\">Examples</h4> <p>Code examples using the API can be found in the Kandji support <a href=\"https://github.com/kandji-inc/support/tree/main/api-tools\">GitHub</a>.</p> </body></html>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kandji_python_sdk.api.prism_api import PrismApi


class TestPrismApi(unittest.TestCase):
    """PrismApi unit test stubs"""

    def setUp(self) -> None:
        self.api = PrismApi()

    def tearDown(self) -> None:
        pass

    def test_activation_lock(self) -> None:
        """Test case for activation_lock

        Activation lock
        """
        pass

    def test_application_firewall(self) -> None:
        """Test case for application_firewall

        Application firewall
        """
        pass

    def test_applications(self) -> None:
        """Test case for applications

        Applications
        """
        pass

    def test_certificates(self) -> None:
        """Test case for certificates

        Certificates
        """
        pass

    def test_count(self) -> None:
        """Test case for count

        Count
        """
        pass

    def test_desktop_and_screensaver(self) -> None:
        """Test case for desktop_and_screensaver

        Desktop and Screensaver
        """
        pass

    def test_device_information(self) -> None:
        """Test case for device_information

        Device information
        """
        pass

    def test_filevault(self) -> None:
        """Test case for filevault

        FileVault
        """
        pass

    def test_gatekeeper_and_xprotect(self) -> None:
        """Test case for gatekeeper_and_xprotect

        Gatekeeper and XProtect
        """
        pass

    def test_get_category_export(self) -> None:
        """Test case for get_category_export

        Get category export
        """
        pass

    def test_installed_profiles(self) -> None:
        """Test case for installed_profiles

        Installed profiles
        """
        pass

    def test_kernel_extensions(self) -> None:
        """Test case for kernel_extensions

        Kernel Extensions
        """
        pass

    def test_launch_agents_and_daemons(self) -> None:
        """Test case for launch_agents_and_daemons

        Launch Agents and Daemons
        """
        pass

    def test_local_users(self) -> None:
        """Test case for local_users

        Local users
        """
        pass

    def test_request_category_export(self) -> None:
        """Test case for request_category_export

        Request category export
        """
        pass

    def test_startup_settings(self) -> None:
        """Test case for startup_settings

        Startup settings
        """
        pass

    def test_system_extensions(self) -> None:
        """Test case for system_extensions

        System Extensions
        """
        pass

    def test_transparency_database(self) -> None:
        """Test case for transparency_database

        Transparency database
        """
        pass


if __name__ == '__main__':
    unittest.main()
